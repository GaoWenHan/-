import { useEffect } from "react";
import { i as isFunction } from "./index.js";
const getTargetElement = (target) => {
  let targetElement;
  if (isFunction(target)) {
    targetElement = target();
  } else if ("current" in target) {
    targetElement = target.current;
  } else {
    targetElement = target;
  }
  return targetElement;
};
function useClickAway(onClickAway, target, eventName = "click", useCapture, isListener, outerVar) {
  const handler = (event) => {
    const targets = Array.isArray(target) ? target : [target];
    if (targets.some((item) => {
      const targetElement = getTargetElement(item);
      return !targetElement || targetElement.contains(event.target);
    })) {
      return;
    }
    if (outerVar) {
      onClickAway();
    }
  };
  useEffect(() => {
    if (isListener) {
      window.addEventListener(eventName, handler, useCapture);
    } else {
      window.removeEventListener(eventName, handler, useCapture);
    }
    return () => {
      window.removeEventListener(eventName, handler, useCapture);
    };
  }, [target]);
}
export {
  useClickAway as u
};
