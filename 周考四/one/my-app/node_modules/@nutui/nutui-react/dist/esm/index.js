const isObject = (val) => val !== null && typeof val === "object";
const isFunction = (val) => typeof val === "function";
const isPromise = (val) => {
  return isObject(val) && isFunction(val.then) && isFunction(val.catch);
};
const clamp = (num, min, max) => Math.min(Math.max(num, min), max);
function preventDefault(event, isStopPropagation) {
  if (typeof event.cancelable !== "boolean" || event.cancelable) {
    event.preventDefault();
  }
  if (isStopPropagation) {
    event.stopPropagation();
  }
}
export {
  isObject as a,
  isPromise as b,
  clamp as c,
  isFunction as i,
  preventDefault as p
};
