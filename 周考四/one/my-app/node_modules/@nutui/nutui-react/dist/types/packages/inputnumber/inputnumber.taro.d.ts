import { default as React, FunctionComponent, ChangeEvent } from 'react';
import { InputProps } from '@tarojs/components';
import { BasicComponent } from '../../utils/typings';
export interface InputNumberProps extends BasicComponent {
    value: number | string;
    defaultValue: number | string;
    allowEmpty: boolean;
    min: number | string;
    max: number | string;
    type?: Extract<InputProps['type'], 'number' | 'digit'>;
    disabled: boolean;
    readOnly: boolean;
    step: number;
    digits: number;
    async: boolean;
    select: boolean;
    formatter?: (value?: string | number) => string;
    onPlus: (e: React.MouseEvent) => void;
    onMinus: (e: React.MouseEvent) => void;
    onOverlimit: (e: React.MouseEvent | ChangeEvent<HTMLInputElement>) => void;
    onBlur: (e: React.FocusEvent<HTMLInputElement>) => void;
    onFocus: (e: React.FocusEvent<HTMLInputElement>) => void;
    onChange: (param: string | number, e: React.MouseEvent | ChangeEvent<HTMLInputElement>) => void;
}
export declare const InputNumber: FunctionComponent<Partial<InputNumberProps> & Omit<React.HTMLAttributes<HTMLDivElement>, 'onChange' | 'onBlur'>>;
