import { default as React, FunctionComponent, MouseEvent } from 'react';
import { InputProps, ITouchEvent } from '@tarojs/components';
import { BaseEventOrig } from '@tarojs/components/types/common';
import { BasicComponent } from '../../utils/typings';
type inputEventDetail = InputProps.inputEventDetail;
type inputForceEventDetail = InputProps.inputForceEventDetail;
type inputValueEventDetail = InputProps.inputValueEventDetail;
export interface SearchBarProps extends BasicComponent {
    value?: number | string;
    placeholder?: string;
    shape?: 'square' | 'round';
    disabled?: boolean;
    maxLength?: number;
    clearable?: boolean;
    readOnly?: boolean;
    autoFocus?: boolean;
    backable: boolean;
    left: React.ReactNode;
    right: React.ReactNode;
    leftIn: React.ReactNode;
    rightIn: React.ReactNode;
    onSearch?: (val: string) => void;
    onChange?: (value: string, event?: BaseEventOrig<inputEventDetail>) => void;
    onFocus?: (value: string, event: BaseEventOrig<inputForceEventDetail>) => void;
    onBlur?: (value: string, event: BaseEventOrig<inputValueEventDetail>) => void;
    onClear?: (event: MouseEvent<HTMLDivElement>) => void;
    onInputClick?: (event: ITouchEvent) => void;
}
export declare const SearchBar: FunctionComponent<Partial<SearchBarProps> & Omit<React.HTMLAttributes<HTMLDivElement>, 'onChange' | 'onFocus' | 'onBlur'>>;
export {};
