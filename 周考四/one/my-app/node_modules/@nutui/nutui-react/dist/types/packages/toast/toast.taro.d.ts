import { default as React, FunctionComponent } from 'react';
import { BasicComponent } from '../../utils/typings';
export type ToastPosition = 'top' | 'bottom' | 'center';
export type ToastSize = 'small' | 'base' | 'large';
export type ToastWordBreak = 'normal' | 'break-all' | 'break-word';
export interface ToastProps extends BasicComponent {
    id?: string;
    maskClassName?: string;
    contentClassName?: string;
    contentStyle?: React.CSSProperties;
    icon: React.ReactNode;
    iconSize: string;
    content: React.ReactNode;
    duration: number;
    position?: ToastPosition;
    type: string;
    title: string;
    closeOnOverlayClick: boolean;
    lockScroll: boolean;
    size: ToastSize;
    visible: boolean;
    wordBreak?: ToastWordBreak;
    onClose: () => void;
    /**
     * @deprecated Please use `content` prop instead.
     */
    msg: React.ReactNode;
}
export declare const Toast: FunctionComponent<Partial<ToastProps> & Omit<React.HTMLAttributes<HTMLDivElement>, 'content'>> & {
    show: typeof show;
    hide: typeof hide;
};
export interface ToastOptions extends Partial<Omit<ToastProps, 'visible'>> {
}
export declare function show(selector: string, options: ToastOptions): void;
export declare function hide(selector: string): void;
